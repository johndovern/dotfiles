# vim style tmux config

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-b
unbind-key C-b
bind-key C-b send-prefix
set -g base-index 1

# Fix escape key delay
set -sg escape-time 0

# Easy config reload
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g default-terminal screen-256color
set-option -g main-pane-height 55%
set-option -g main-pane-width 55%

bind-key : command-prompt
bind-key r split-window -fbh 'source ~/.zprofile && lfrun' \; select-layout main-vertical
bind-key e split-window -fbv 'source ~/.zprofile && lfrun' \; select-layout main-vertical
bind-key L clear-history

# bind-key space swap-pane -Z -s {top-left}
bind -n C-space run "(tmux display-message -p '#{window_zoomed_flag}' | grep -iqE '^1$' && tmux resize-pane -Z) ; (tmux display-message -p '#{pane_index}' | grep -iqE '^0$' && tmux swap-pane -dZ -s {top-right}) || tmux swap-pane -Z -s {top-left}"
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -bh \; select-layout main-vertical
bind-key s split-window -bv \; select-layout main-vertical
bind-key h select-pane -LZ
# bind-key j select-pane -DZ
bind -n C-j run "(tmux display-message -p '#{window_zoomed_flag}' | grep -iqE '^1$' && tmux resize-pane -Z) ; (tmux display-message -p '#{pane_at_left}' | grep -iqE '^1$' && tmux select-pane -Z -t {top-right}) || (tmux display-message -p '#{pane_at_bottom}' | grep -iqE '^1$' && tmux select-pane -LZ) || tmux select-pane -DZ"
bind -n C-k run "(tmux display-message -p '#{window_zoomed_flag}' | grep -iqE '^1$' && tmux resize-pane -Z) ; (tmux display-message -p '#{pane_at_left}' | grep -iqE '^1$' && tmux select-pane -Z -t {bottom-right}) || (tmux display-message -p '#{pane_at_top}' | grep -iqE '^1$' && tmux select-pane -Z -t {top-left}) || tmux select-pane -UZ"
# bind-key k select-pane -UZ
bind-key l select-pane -RZ

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)nvim$' && tmux send-keys C-w h) || tmux select-pane -LZ"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)nvim$' && tmux send-keys C-w j) || tmux select-pane -DZ"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)nvim$' && tmux send-keys C-w k) || tmux select-pane -UZ"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)nvim$' && tmux send-keys C-w l) || tmux select-pane -RZ"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)nvim$' && tmux send-keys 'C-w \\') || tmux select-pane -lZ"

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key i resize-pane -Z
bind-key u display-message

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Status Bar
set-option -g status-interval 1
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#H #[default]'
set -g status-right '%a %H:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null 2>&1 && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# # Fix delete key
# bind -n '^[[3~' send-keys '^B'

# Clear screen
bind-key o send-keys 'C-l'

# Kill window & kill window + panel
bind-key q killp \; select-layout main-vertical
bind-key Q killw

# Add tmux-yank and set opts
run-shell ~/.config/tmux/tmux-yank/yank.tmux
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'

# Add tmux-resurect
run-shell ~/.config/tmux/tmux-res/resurrect.tmux
