#!/bin/bash
# Music module- Shows mpd SONG playing.
# - [Paused] when paused.
# - [Music] when mpc is stopped.
# - Left click pauses, or if stopped gives
#   dmenu list of playlists to play shuffled.
#   If no playlists exist then ncmpcpp will open.
#   Playlists are found for in ~/.config/mpd/playlists
# - Middle click opens ncmpcpp.
# - Right click displays the full sond name.
# - Scroll changes track.
export STATUS
export SONG
export PAUSED
export PLAY
export PLAYLIST
export PLAYLIST_DIR="$XDG_CONFIG_HOME/mpd/playlists"

mpc_status() {
  mpc | grep -q "volume: n/a   r" && STATUS="STOPPED" || STATUS="PLAYING"
  [[ "$(find "$PLAYLIST_DIR" -type f -name *.m3u -printf '%P\n' | wc -l)" -lt 1 ]] && \
    PLAYLIST="NONE" || \
    PLAYLIST="FOUND"
}

cut_song() {
  L=0
  while IFS= read -r -d "" -n 1 CHAR; do
    [[ "${L}" -eq 10 ]] && break
    printf '%s' "${CHAR}"
    L=$((L+1))
  done < <(printf '%s' "${SONG}")
}

filter() {
  if mpc | grep -q "\[paused\]" ; then
    SONG=
    PAUSED="Paused"
  elif mpc | grep -q "volume: n/a   r" ; then
    SONG=
    PAUSED="mpc"
  else
    SONG="$(mpc | head -n1 | sed 's|tmaster.*/||g')"
    SONG="$(cut_song | sed 's/\s\+\?$/.../g')"
    PAUSED=
  fi
  printf '%s\n' "[${SONG}${PAUSED}]"
}

play_music() {
  PLAY=$(find $XDG_CONFIG_HOME/mpd/playlists -type f -printf '%P\n' | sed 's/\.m3u//g' | dmenu -i -p "Playlist:")
  case "${PLAY:-NO_SELECTION}" in
    NO_SELECTION)
      return 0
      ;;
    *)
      mpc clear && \
        mpc load "${PLAY}" >/dev/null 2>&1 && \
        mpc random off >/dev/null 2>&1 && \
        mpc repeat on >/dev/null 2>&1 && \
        mpc play >/dev/null 2>&1 && \
        mpc random on >/dev/null 2>&1
      return 0
      ;;
  esac
}

unfilter() { mpc | head -n1;}

pidof -x sb-mpdup >/dev/null 2>&1 || sb-mpdup >/dev/null 2>&1 &

case $BLOCK_BUTTON in
	1)
    mpc_status >/dev/null 2>&1
    case "$STATUS" in
      STOPPED)
        case "$PLAYLIST" in
          NONE)
            setsid -f "$TERMINAL" -e ncmpcpp
            ;;
          FOUND)
            play_music >/dev/null 2>&1
            filter
            ;;
          *)
            exit
            ;;
        esac
        ;;
      PLAYING)
        mpc toggle >/dev/null 2>&1
        filter
        ;;
      *)
        exit
        ;;
    esac
    ;;
	2)
    filter
    setsid -f "$TERMINAL" -e ncmpcpp
    ;;
  3)
    filter
    notify-send "$(mpc status | unfilter)"
    ;;
	4)
    mpc prev >/dev/null 2>&1
    filter
    ;;
	5)
    mpc next >/dev/null 2>&1
    filter
    ;;
	6)
    mpc stop >/dev/null 2>&1
    filter
    ;;
	*)
    filter
    ;;
esac
