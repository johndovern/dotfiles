#!/bin/bash

cut_song() {
    PRINT_WIDTH=0
    while IFS= read -r -d "" -n 1 CHAR; do
        printf '%s' "$CHAR"
        CHAR_WIDTH="$(wc -L <<<"$CHAR")"
        PRINT_WIDTH=$((PRINT_WIDTH + CHAR_WIDTH))
        [[ "$PRINT_WIDTH" -ge 16 ]] && {
            break
        }
    done < <(printf '%s' "$1")
}

handle_block() {
    case $BLOCK_BUTTON in
        1)
            mpv-toggle --music --quiet
            ;;
        2)
            mpv-opts --quit --music
            ;;
        3)
            mpv_display
            notify-send "mpv-music" "$SONG"
            ;;
        4)
            mpv-prev --music
            ;;
        5)
            mpv-next --music
            ;;
        6)
            yt-opts "$(mpv-get-property --music "path")"
            ;;
        *)
            [[ "$NOT_PLAYING" -eq 1 ]] && {
                printf "| %s \n" "mpv-music"
                exit 0
            }
            ;;
    esac
}

mpv_display() {
    [[ -z "$SOCKET" ]] && {
        SONG="mpv-music"
        return 0
    }
    SONG_FILE="$SOCKET.txt"
    SONG="$(head -n1 "$SONG_FILE")"
    [[ "${#SONG}" -gt 16 ]] && LONG_MPV=1
    [[ "$LONG_MPV" -eq 1 ]] && return 0
    SONG="$(cut_song "$SONG" | sed 's/\s\+$//g') - mpv-music"
}

roll_text() {
    POSITION=$(tail -n1 "$SONG_FILE")
    SONG_LEN="$(wc -L <<<"${SONG:$POSITION}")"
    [[ "$SONG_LEN" -lt 16 ]] && POSITION=0
    SONG="$(cut_song "${SONG:$POSITION:16}") - mpv-music"
    POSITION=$((POSITION + 2))
    sed -i "\$s/.*/$POSITION/" "$SONG_FILE" >/dev/null 2>&1
    return 0
}

set_socket() {
    SOCKET="${MPV_MUSIC_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/music_socket}"
    if [[ ! -S "${SOCKET}" ]] || ! mpv-currently-playing --music --quiet; then
        NOT_PLAYING=1
        mpv-active-sockets --socket "$SOCKET" || exit 0
    fi
}

set_socket >/dev/null 2>&1
handle_block
mpv_display
[[ "$LONG_MPV" -eq 1 ]] && roll_text
printf "| %s \n" "$SONG"
