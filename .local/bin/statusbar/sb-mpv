#!/bin/bash

set_socket() {
  if mpv-currently-playing --umpv --socket >/dev/null 2>&1; then
    SOCKET="${MPV_UMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/umpv_socket}"
  elif mpv-currently-playing --unique --socket >/dev/null 2>&1; then
    SOCKET="$(mpv-currently-playing --unique --socket | head -n1)"
  fi
}

cut_song() {
  L=0
  while IFS= read -r -d "" -n 1 CHAR; do
    [[ "${L}" -eq 15 ]] && break
    printf '%s' "${CHAR}"
    L=$((L + 1))
  done < <(printf '%s' "${SONG}")
}

roll_text() {
  SONG="$(mpv-get-property "${SOCKET}" "media-title")"
  TIME="$(awk '{print int($1)}' /proc/uptime)"
  LENGTH=${#SONG}
  TIME=$((TIME % LENGTH))
  TIME_OUT=$((LENGTH - 15))
  while [[ $TIME -gt $TIME_OUT ]]; do
    TIME=$((TIME - TIME_OUT))
  done
  printf '[%s]\n' "${SONG:${TIME}:15}"

  return 0
}

mpv_display() {
  case "${SOCKET:-NOT_PLAYING}" in
    NOT_PLAYING)
      SONG=''
      PAUSED="mpv"
      ;;
    *)
      case "$1" in
        -u)
          SONG=$(mpv-get-property "${SOCKET}" "media-title")
          ;;
        *)
          SONG="$(mpv-get-property "${SOCKET}" "media-title")"
          # [[ ${#SONG} -gt 15 ]] && setsid -f sb-mpv-roll >/dev/null 2>&1 &
          [[ ${#SONG} -gt 15 ]] && LONG_MPV=1 || LONG_MPV=0
          [[ $LONG_MPV -eq 1 ]] && return 0
          SONG="$(cut_song | sed 's/\s\+$//g')"
          PAUSED=''
          ;;
      esac
      ;;
  esac
  kill "$(pgrep sb-mpv-roll)" >/dev/null 2>&1
  printf '%s\n' "[${SONG}${PAUSED}]"
}

if ! pgrep -x "mpv" >/dev/null 2>&1; then
  exit 0
fi

case $BLOCK_BUTTON in
  1)
    set_socket
    mpv-toggle --socket "${SOCKET}" || mpv-toggle --umpv || mpv-toggle --socket "$(mpv-active-sockets --unique | head -n1)"
    mpv_display
    ;;
  2)
    set_socket
    mpv-opts --quit --socket "${SOCKET}"
    set_socket
    mpv_display
    ;;
  3)
    set_socket
    notify-send "$(mpv_display -u)"
    mpv_display
    ;;
  4)
    set_socket
    mpv-prev --socket "${SOCKET}"
    mpv_display
    ;;
  5)
    set_socket
    mpv-next --socket "${SOCKET}"
    mpv_display
    ;;
  *)
    set_socket
    # pgrep sb-mpv-roll >/dev/null 2>&1 || {
    # mpv_display
    # exit
    # }
    [[ -z "$SOCKET" ]] && {
      mpv_display
      exit
    }
    mpv_display
    [[ $LONG_MPV -eq 1 ]] && roll_text
    ;;
esac
