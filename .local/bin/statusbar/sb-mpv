#!/bin/bash

set_socket() {
  if mpv-currently-playing --umpv --socket >/dev/null 2>&1 ; then
    SOCKET="${MPV_UMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/umpv_socket}"
  elif mpv-currently-playing --unique --socket >/dev/null 2>&1 ; then
    SOCKET="$(mpv-currently-playing --unique --socket | head -n1)"
  fi
}

cut_song() {
  L=0
  while IFS= read -r -d "" -n 1 CHAR; do
    [[ "${L}" -eq 15 ]] && break
    printf '%s' "${CHAR}"
    L=$((L+1))
  done < <(printf '%s' "${SONG}")
}

mpv_display() {
  case "${SOCKET:-NOT_PLAYING}" in
    NOT_PLAYING)
      SONG=''
      PAUSED="mpv"
      ;;
    *)
      case "$1" in
        -u)
          SONG=$(mpv-get-property "${SOCKET}" "media-title")
          ;;
        *)
          SONG="$(mpv-get-property "${SOCKET}" "media-title")"
          # SONG="$(cut_song | sed 's/\s\+$//g')"
          # SONG="$(cut_song | sed 's/\s\+\?$/.../g')"
          PAUSED=''
          ;;
      esac
      ;;
  esac
  # if [[ -z "${SONG}" ]]; then
    printf '%s\n' "[${SONG}${PAUSED}]"
  # else
  #   LENGTH="${#SONG}"
  #   L=0
  #   while :; do
  #     [[ "${LENGTH}" -gt $((LENGTH-15)) ]] && L=0
  #     clear
  #     printf '%s' "${SONG:${L}:15}"
  #     L=$((L+1))
  #   done
  # fi
}

if ! pgrep -x "mpv" >/dev/null 2>&1 ; then
  exit 0
fi

case $BLOCK_BUTTON in
  1)
    set_socket
    mpv-toggle --socket "${SOCKET}" || mpv-toggle --umpv || mpv-toggle --socket "$(mpv-active-sockets --unique | head -n1)"
    mpv_display
    ;;
  2)
    set_socket
    mpv-opts --quit --socket "${SOCKET}"
    set_socket
    mpv_display
    ;;
  3)
    set_socket
    notify-send "$(mpv_display -u)"
    mpv_display
    ;;
  4)
    set_socket
    mpv-prev --socket "${SOCKET}"
    mpv_display
    ;;
  5)
    set_socket
    mpv-next --socket "${SOCKET}"
    mpv_display
    ;;
  *)
    set_socket
    mpv_display
    ;;
esac
