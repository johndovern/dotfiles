#!/bin/sh

SOCKET="${MPV_MUSIC_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/music_socket}"

mpv_add() {
  mpv-communicate --music '{ "command": ["loadfile", "'"$1"'", "append-play"] }' >/dev/null 2>&1 || return 1
  notify-send "mpv-music" "Added $1"
  mpv-communicate --music '{ "command": ["get_property", "eof-reached"] }' | grep -q ":true" || return 0
  mpv-communicate --music '{ "command": ["playlist-next"] }'
  sleep 0.5
  mpv-toggle --music
  sleep 5
}

mpv_loop() {
  while [ $# -gt 0 ]; do
    mpv_add "$1"
    shift
  done
}

mpv_start() {
  mpv --idle=yes \
    --no-terminal \
    --script-opts=mpvSockets-music=yes,dwmblocks-music=yes,playlistmanager-sortplaylist_on_start=no \
    --force-window=no \
    --video=no \
    --loop-playlist=yes \
    --ytdl=no \
    --keep-open=yes "$@" >/dev/null 2>&1 &
    # --keep-open=yes "$@" &
  notify-send "mpv-music" "Started $*"
}

mpv_track() {
  TRACK_SOCKET="/tmp/mpvSockets/mpv-last-used"
  ACTUAL_SOCKET="$(readlink "$TRACK_SOCKET")"

  [ "$1" = "$ACTUAL_SOCKET" ] && exit 0

  test_socket() {
      sleep 0.5
      [ ! -S "$1" ] && exit 0
      ln -s "$1" "$TRACK_SOCKET"
  }

  rm -f "$TRACK_SOCKET"
  test_socket "$1" &
}

main() {
  [ -S "$SOCKET" ] && mpv_loop "$@"
  [ ! -S "$SOCKET" ] && mpv_start "$@"

  mpv_track "$SOCKET"
}

main "$@"
