#!/usr/bin/env bash
# Lists active mpv sockets
# Exits unsuccessfully if no sockets are active
declare -a ACTIVE_SOCKETS
export SOCKET_DIR="${MPV_SOCKET_DIR:-/tmp/mpvSockets}"
export UMPV_SOCKET="${MPV_UMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/umpv_socket}"
export MUSIC_SOCKET="${MPV_MUSIC_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/music_socket}"

usage() {
  cat <<- EOF
Usage:  mpv-active-sockets [options]

Options:
  -u, --unique        List only unique instances of mpv.
                      no umpv or music sockets.
  -U, --umpv          List all sockets but umpv's socket.
                      umpv socket is set by \${MPV_UMPV_SOCKET}
                      if set or
                      /tmp/mpvSockets/umpv_socket
                      if unset.
  -m, --music         List all sockets but mpv-music's socket.
                      mpv-music's socket is set by \${MPV_MUSIC_SOCKET}
                      if set or
                      /tmp/mpvSockets/music_socket
                      if unset.
  -h, --help          Show this help message and exit.
EOF
}

get_opts() {
  while :; do
    if [[ $# -gt 0 ]]; then
      case "${1:-NO_OPTION}" in
        NO_OPTION)
          break
          ;;
        -u|--unique)
          NO_CUSTOM=1
          break
          ;;
        -U|--umpv)
          NO_UMPV=1
          break
          ;;
        -m|--music)
          NO_MUSIC=1
          break
          ;;
        -h|--help)
          usage
          return 1
          break
          ;;
        -s|--socket)
          shift
          case "${1:-NO_SOCKET}" in
          esac
          break
          ;;
        *)
        notify-send "Unknown option passed: $1" >&2
        exit 1
        ;;
      esac
    else
      break
    fi
  done
}

is_active_socket() {
	if socat - "$1" <<<'{ "command": ["get_property", "path"] }' >/dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

is_ignored() {
  if [[ "${NO_CUSTOM}" -eq 1 ]]; then
    case "${1}" in
      "${UMPV_SOCKET}"|"${MUSIC_SOCKET}")
        return 0
        ;;
      *)
        return 1
        ;;
    esac
  elif [[ "${NO_UMPV}" -eq 1 ]]; then
    case "${1}" in
      "${UMPV_SOCKET}")
        return 0
        ;;
      *)
        return 1
        ;;
    esac
  elif [[ "${NO_MUSIC}" -eq 1 ]]; then
    case "${1}" in
      "${MUSIC_SOCKET}")
        return 0
        ;;
      *)
        return 1
        ;;
    esac
  else
    return 1
  fi
}

find_active_sockets() {
  while read -r SOCKET; do
    if is_ignored "${SOCKET}" ; then
      continue
    fi
    if is_active_socket "${SOCKET}"; then
      ACTIVE_SOCKETS+=("${SOCKET}")
    fi
  done < <(find "${SOCKET_DIR}" -type s -printf '%p\n')

  if [[ "${#ACTIVE_SOCKETS[@]}" -eq 0 ]]; then
    return 1
  fi

  printf '%s\n' "${ACTIVE_SOCKETS[@]}" | sort -n
}

main() {
  get_opts "$@" || return 1
  ACTIVE_SOCKETS=()
  find_active_sockets || return 1
}

main "$@" && exit 0 || exit 1
