#!/usr/bin/env bash
# seek forward/backward in the current song

declare -a PLAYING

choose_socket() {
  USE_SOCKET="$(mpv-pick $USE_CURRENT $FZF)"
}

get_opts() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -a | --ampv)
        USE_SOCKET="${MPV_AMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/ampv_socket}"
        ;;
      -c | --current) USE_CURRENT="-c" ;;
      -f | --fzf) FZF="--fzf" ;;
      -l | --latest)
        while read -r PLAY; do
          PLAYING+=("$PLAY")
        done < <(mpv-currently-playing --unique --socket)
        if [[ ${#PLAYING[@]} -eq 0 ]]; then
          notify-send "No mpv instances which are currently playing media..." >&2
          return 1
        fi
        USE_SOCKET="${PLAYING[-1]}"
        ;;
      -m | --music)
        USE_SOCKET="${MPV_MUSIC_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/music_socket}"
        ;;
      -u | --umpv)
        USE_SOCKET="${MPV_UMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/umpv_socket}"
        ;;
      -s | --socket)
        shift
        USE_SOCKET="$1"
        ;;
      *)
        [[ "$1" =~ ^-?[0-9]+$ ]] && SEEK_SECONDS="$1"
        ;;
    esac
    shift
  done
  [[ -z "$SEEK_SECONDS" ]] && SEEK_SECONDS=5
  return 0
}

mpv_seek() {
  mpv-communicate "$USE_SOCKET" "$(printf '{ "command": ["seek", "%d"] }' "${SEEK_SECONDS}")"
  USED_SOCKET="$USE_SOCKET"
}

main() {
  get_opts "$@" || return 1
  [[ -z "$USE_SOCKET" ]] && choose_socket
  [[ -z "$USE_SOCKET" ]] && return 1
  mpv_seek
  mpv-track "$USED_SOCKET"
}

main "$@" && exit 0 || exit 1
