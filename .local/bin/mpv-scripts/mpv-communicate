#!/usr/bin/env bash
# Sends commands to an mpv socket using socat
# First argument: mpv socket
# all other arguments are sent to the socket using socat

abort() {
  [[ "$QUIET" -ne 1 ]] && echo "$1" >&2
  exit 1
}

case "$1" in
  -q | --quiet)
    QUIET=1
    shift
    ;;
esac

case "$1" in
  -a | --ampv)
    SOCKET="${MPV_AMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/ampv_socket}"
    ;;
  -u | --umpv)
    SOCKET="${MPV_UMPV_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/umpv_socket}"
    ;;
  -m | --music)
    SOCKET="${MPV_MUSIC_SOCKET:-${MPV_SOCKET_DIR:-/tmp/mpvSockets}/music_socket}"
    ;;
  *)
    SOCKET="${1:?Must provide socket as first argument}"
    ;;
esac

shift # remove socket path

[[ ! -e "${SOCKET}" ]] && abort "Path doesn't exist: ${SOCKET}"
[[ ! -S "${SOCKET}" ]] && abort "Path is not a socket: ${SOCKET}"

readonly SOCKET

[[ -z "$1" ]] && abort "Must provide command to pass to socat. See https://github.com/johndovern/mpv-sockets for examples"

if [[ "$QUIET" -ne 1 ]]; then
  exec socat - "$SOCKET" <<<"$@"
elif [[ "$QUIET" -eq 1 ]]; then
  exec socat - "$SOCKET" <<<"$@" >/dev/null 2>&1
fi
